__author__ = '20093'

import os
from multiprocessing import Pool
from multiprocessing.dummy import Pool as ThreadPool


def main():
    dest_folder = 'X:\SATA_CNE'
    CNE = map(lambda s: os.path.join(dest_folder, s), os.listdir(dest_folder))
    CNE_dir = filter(lambda s: os.path.isdir(s) and s[-3:-1]=='PC', CNE)
    for CNE_list in CNE_dir:

        Test_dir = filter(lambda s: s[:4]=='Step' or s[:4]=='S3E_' , os.listdir(CNE_list))
        Test_Recent=filter(lambda s:int(s[s.rfind('_')+1:],10)<94000,Test_dir)
        Test_path=map(lambda s:os.path.join(CNE_list,s),Test_Recent)
        print Test_path


        TLV_CSV = map(lambda s: s + '/Process_TLV', Test_path)

        TLV_folder = filter(lambda s: (os.path.isdir(s) == 1), TLV_CSV)

        # This is for removing decoded csv file under Process_TLV
        for TLV in TLV_folder:
            csv_file = map(lambda s: os.path.join(TLV, s), os.listdir(TLV))
            csv_list = filter(lambda s: '.csv' in s, csv_file)
            print csv_list
        #     pool = ThreadPool(20)
        #     pool.map(os.remove, csv_list)
        #     pool.close()
        #     # This is for removing DAT files generated by CNE
        # for Test in Test_dir:
        #     Test_DUT = map(lambda s: os.path.join(
        #         Test, s), os.listdir(Test))
        #     DUT_list = filter(
        #         lambda s: 'DUT' in s[-6:] and os.path.isdir(s), Test_DUT)
        #     for DUT in DUT_list:
        #         DAT_files = map(lambda s: os.path.join(
        #             DUT, s), os.listdir(DUT))
        #         DAT_list = filter(lambda s: '.dat' in s[-5:], DAT_files)
        #         pool = ThreadPool(20)
        #         pool.map(os.remove, DAT_list)
        #         pool.close()
        #         print DAT_list

if __name__ == '__main__':
    dest_folder = ''
    main()
